@using Microsoft.AspNetCore.Routing.Patterns
@model CoreTemplate.ApplicationCore.Specifications.Paginated<ItemViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool separator = false;
}

<h1>Items</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@*<div id="myModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            
        </div>
    </div>
</div>*@

<table id="" class="table table-striped table-bordered">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Model.FirstOrDefault().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Model.FirstOrDefault().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Model.FirstOrDefault().Priority)
        </th>
        <th></th>
    </tr>
    </thead>

    <tbody>
    @foreach (var item in Model.Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
                <a class="" data-remote="/Items/Edit/8" asp-action="EditPopup" asp-route-id="@item.Id" data-target="#myModal" data-toggle="modal">EDIT</a> |

                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item @(Model.ShowPrevious ? "" : "disabled")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber-1)"asp-route-pageSize="@Model.PageSize" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>

        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            if (i <= 1 || i >= Model.TotalPages - 2 || (i >= Model.PageNumber - 2 && i <= Model.PageNumber + 2))
            {
                <li class="page-item  @(i == Model.PageNumber ? "active" : "")"><a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize">@i</a></li>
                separator = false;
            }
            else
            {
                if (!separator)
                {
                    separator = true;
                    <li class="page-item disabled"><a class="page-link">...</a></li>
                }
            }

        }
        <li class="page-item @(Model.ShowNext ? "" : "disabled")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber+1)" asp-route-pageSize="@Model.PageSize" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</nav>

